name: "[remoodle/frontend/web] Release, please"

on:
  push:
    branches: [trunk]
    paths:
      - "remoodle/frontend/web/**"
      - ".github/workflows/remoodle-frontend-web-release.yml"

permissions:
  contents: write
  pull-requests: write

defaults:
  run:
    working-directory: ./remoodle/frontend/web

jobs:
  deploy:
    name: Update Release PR, Build and Deploy to Stage / Production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: "tradelink/frontend/pnpm-lock.yaml"

      - name: Run release-please
        uses: google-github-actions/release-please-action@v3
        id: release
        with:
          token: ${{ secrets.ROBOT_TOKEN }}
          release-type: node
          path: remoodle/frontend/web
          monorepo-tags: true
          package-name: remoodle/web
          tag-separator: "-"
          pull-request-title-pattern: "chore${scope}: ${component} release (deploy-as: release-${version})"

      - name: Get shorten commit SHA
        id: short-sha
        uses: actions/github-script@v3
        with:
          result-encoding: string
          script: return context.sha.slice(0, 8);

      - name: Install dependencies
        run: pnpm install

      - name: Build app
        env:
          COMMIT_SHA: ${{ github.sha }}
          CDN_HOST: ${{ vars.CDN_HOST }}
          CDN_PREFIX: ${{ steps.short-sha.outputs.result }}
        run: pnpm build-only

      - name: Deploy bundle on CDN with prefix
        uses: ./.github/actions/wrangler-action
        with:
          workingDirectory: ./remoodle/frontend/web
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name=remoodle --branch=${{ steps.short-sha.outputs.result }}

      - name: Deploy on trunk
        uses: ./.github/actions/wrangler-action
        with:
          workingDirectory: ./remoodle/frontend/web
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name=remoodle --branch="trunk"

      - name: Deploy on production
        if: steps.release.outputs.releases_created == 'true'
        uses: ./.github/actions/wrangler-action
        with:
          workingDirectory: ./remoodle/frontend/web
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy dist --project-name=remoodle --branch="production"
